# desc "Explaining what the task does"
# task :easy_migrate do
#   # Task goes here
# end

namespace :db do
  `rm -rf db/easy-migrations-tmp`
  `mkdir db/easy-migrations-tmp`
  files = []
  files << `find db/migrate | egrep -v "migrate$"`.split("\n")
  files << `find vendor/plugins/*/db/migrate | egrep -v "migrate$"`.split("\n")
  files.flatten!
  valid_files = files.collect{|s| s.scan(/^.*\/[0-9]{14}_.*/) }.flatten
  failed_plugins = (files - valid_files).collect{|s| s.scan(/^vendor\/plugins\/([A-Z_\-a-z]*)\/db/) }.flatten.uniq
  failed_scripts = (files - valid_files).collect{|s| s.scan(/^db\/migrate\/([A-Z_a-z0-9]*)/) }.flatten
  `for f in #{valid_files.join(" ")} ; do ln -s ../../$f db/easy-migrations-tmp/ ; done`
  puts "====================================================================="
  puts "Migrations run for the application and all plugins using easy_migrate"
  puts "====================================================================="
  
  desc "Run db:migrate to run migrations for both db/migrate in the app and in the plugins"
  task :migrate => :environment do
    if failed_plugins.size > 0
      puts "The following plugins failed to migrate as they have the wrong style naming format..."
      puts failed_plugins.join(", ")
    end
    if failed_scripts.size > 0
      puts "The following scripts in db/migrate failed to be run as they have the wrong style naming format..."
      puts failed_scripts.join(", ")
    end
    ActiveRecord::Migration.verbose = ENV["VERBOSE"] ? ENV["VERBOSE"] == "true" : true
    ActiveRecord::Migrator.migrate("db/easy-migrations-tmp/", ENV["VERSION"] ? ENV["VERSION"].to_i : nil)
    Rake::Task["db:schema:dump"].invoke if ActiveRecord::Base.schema_format == :ruby
  end

  namespace :migrate do
    desc "Step forwards over all application and plugin migrations"
    task :up => :environment do
      ActiveRecord::Migration.verbose = ENV["VERBOSE"] ? ENV["VERBOSE"] == "true" : true
      ActiveRecord::Migrator.run(:up, "db/easy-migrations-tmp/", ENV["VERSION"] ? ENV["VERSION"].to_i : nil)
      Rake::Task["db:schema:dump"].invoke if ActiveRecord::Base.schema_format == :ruby
    end
  end














end
